//================================================================================
//
//    二次方程式クラスヘッダ
//    Author : Araki Kai                                作成日 : 2017/12/12
//
//================================================================================

#ifndef	_QUADRATIC_EQUATION_H_
#define _QUADRATIC_EQUATION_H_



//**********************************************************************
//
// インクルード文
//
//**********************************************************************

#include "../Vector3D.h"



//**********************************************************************
//
// クラス定義
//
//**********************************************************************

class QuadraticEquation
{
// ============================================================
public :
	// デフォルトコンストラクタ
	QuadraticEquation(float a = 0.0f, float b = 0.0f, float c = 0.0f);


// ============================================================
public :
	// デストラクタ
	virtual ~QuadraticEquation();


// ============================================================
public :
	// メンバ関数	
	void CreateD();

	bool CalculateTheSolutionFormula();


// ============================================================
public :
	// メンバ変数
	float a_;
	float b_;
	float c_;
	float d_;

	float t0_;
	float t1_;
};





//**********************************************************************
//
// 非静的メンバ関数定義( inline )
//
//**********************************************************************

//================================================================================
//
// [ デフォルトコンストラクタ ]
//
//================================================================================

inline QuadraticEquation::QuadraticEquation(float a, float b, float c)
	:a_(a), 
	 b_(b), 
	 c_(c)
{
}



//================================================================================
//
// [ デストラクタ ]
//
//================================================================================

inline QuadraticEquation::~QuadraticEquation() 
{
}



//================================================================================
//
// [ d = b^2 -4ac作成関数 ]
//
//================================================================================

inline void QuadraticEquation::CreateD()
{
	d_ = b_ * b_ -(4.0f * a_ * c_);
}



//================================================================================
//
// [ 解の公式計算関数 ]
//
//================================================================================
inline bool QuadraticEquation::CalculateTheSolutionFormula()
{
	CreateD();

	// 解の公式が計算可能か
	if(d_ < 0.0f) return false;

	// 解の公式を解く
	d_ = sqrtf(d_);

	t0_ = (-b_ + d_) / (2.0f * a_);
	t1_ = (-b_ - d_) / (2.0f * a_);

	return true;
}



#endif