//================================================================================
//!	@file	 UpdateNull.h
//!	@brief	 空白更新Class
//! @details 
//!	@author  Kai Araki									@date 2018/11/02
//================================================================================
#ifndef	_UPDATE_NULL_H_
#define _UPDATE_NULL_H_



//****************************************
// インクルード文
//****************************************
#include "UpdateBase.h"



//************************************************************														   
//! @brief   空白更新Class
//!
//! @details 更新の空白Class
//************************************************************
class UpdateNull : public UpdateBase
{
//====================
// 関数
//====================
public:
	//----------------------------------------
	//! @brief 仮想デストラクタ
	//! @details 
	//! @param void なし
	//----------------------------------------
	virtual ~UpdateNull();

	//----------------------------------------
	//! @brief 初期化関数
	//! @details 
	//! @param void なし
	//! @retval void なし
	//----------------------------------------
	virtual void Init() override;

	//----------------------------------------
	//! @brief 終了関数
	//! @details 
	//! @param void なし
	//! @retval void なし
	//----------------------------------------
	virtual void Uninit() override;

	//----------------------------------------
	//! @brief 更新関数
	//! @details 
	//! @param void なし
	//! @retval void なし
	//----------------------------------------
	virtual void Update();

	//----------------------------------------
	//! @brief デバッグ表示関数
	//! @details 
	//! @param void なし
	//! @retval void なし
	//----------------------------------------
	virtual void DebugDisplay();

	//----------------------------------------
	//! @brief 後更新関数
	//! @details 
	//! @param void なし
	//! @retval void なし
	//----------------------------------------
	virtual void LateUpdate();
};



#endif