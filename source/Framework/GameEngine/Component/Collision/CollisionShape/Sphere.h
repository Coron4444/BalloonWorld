//================================================================================
//!	@file	 Sphere.h
//!	@brief	 球Class
//! @details 
//!	@author  Kai Araki									@date 2018/11/02
//================================================================================
#ifndef	_SPHERE_H_
#define _SPHERE_H_



//****************************************
// インクルード文
//****************************************
#include "../CollisionShapeBase.h"

#include <Vector3D.h>



//************************************************************														   
//! @brief   球Class
//!
//! @details 球のClass
//************************************************************
class Sphere : public CollisionShapeBase
{
//====================
// 変数
//====================
private:
	Vector3D position_;		//!< 座標
	float radius_;			//!< 半径


//====================
// プロパティ
//====================
public:
	//----------------------------------------
	//! @brief 座標取得関数
	//! @details
	//! @param void なし
	//! @retval Vector3D* 座標
	//----------------------------------------
	Vector3D* getpPosition();

	//----------------------------------------
	//! @brief 半径取得関数
	//! @details
	//! @param void なし
	//! @retval float 半径
	//----------------------------------------
	float getRadius();

	//----------------------------------------
	//! @brief 半径設定関数
	//! @details
	//! @param value 半径
	//! @retval void なし
	//----------------------------------------
	void setRadius(float value);


//====================
// 関数
//====================
public:
	//----------------------------------------
	//! @brief コンストラクタ
	//! @details
	//! @param void なし
	//----------------------------------------
	Sphere();

	//----------------------------------------
	//! @brief 初期化関数
	//! @details
	//! @param position 始点座標
	//! @param radius   半径
	//! @retval void なし
	//----------------------------------------
	void Init(Vector3D position, float radius);
};



#endif