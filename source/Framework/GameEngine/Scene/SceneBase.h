//================================================================================
//!	@file	 SceneBase.h
//!	@brief	 シーンBaseClass
//! @details 
//!	@author  Kai Araki									@date 2018/11/02
//================================================================================
#ifndef	_SCENE_BASE_H_
#define _SCENE_BASE_H_



//****************************************
// クラス宣言
//****************************************
class SceneManager;



//************************************************************														   
//! @brief   シーンBaseClass
//!
//! @details シーンのBaseClass
//************************************************************
class SceneBase
{
//====================
// クラス
//====================
public:
	//****************************************														   
	//! @brief   シーンステートBaseClass
	//!
	//! @details シーンステートのBaseClass
	//****************************************
	class StateBase
	{
	//====================
	// 変数
	//====================
	private:
		SceneBase* scene_ = nullptr;		//!< シーン


	//====================
	// プロパティ
	//====================
	public:
		//----------------------------------------
		//! @brief シーン取得関数
		//! @details
		//! @param void なし
		//! @retval SceneBase* シーン
		//----------------------------------------
		SceneBase* getpScene();

		//----------------------------------------
		//! @brief シーン設定関数
		//! @details
		//! @param *value シーン
		//! @retval void なし
		//----------------------------------------
		void setScene(SceneBase* value);


	//====================
	// 関数
	//====================
	public:
		//----------------------------------------
		//! @brief デストラクタ
		//! @details
		//! @param void なし
		//----------------------------------------
		virtual ~StateBase() = 0;

		//----------------------------------------
		//! @brief 初期化関数
		//! @details
		//! @param void なし
		//! @retval void なし
		//----------------------------------------
		virtual void Init() = 0;

		//----------------------------------------
		//! @brief 終了関数
		//! @details
		//! @param void なし
		//! @retval void なし
		//----------------------------------------
		virtual void Uninit() = 0;

		//----------------------------------------
		//! @brief 更新関数
		//! @details
		//! @param void なし
		//! @retval void なし
		//----------------------------------------
		virtual void Update() = 0;

		//----------------------------------------
		//! @brief リセット関数
		//! @details
		//! @param void なし
		//! @retval void なし
		//----------------------------------------
		virtual void Reset() = 0;
	};


//====================
// 変数
//====================
private:
	SceneManager* scene_manager_ = nullptr;		//!< シーンマネージャ
	StateBase* state_ = nullptr;				//!< ステート


//====================
// プロパティ
//====================
public:
	//----------------------------------------
	//! @brief シーンマネージャ取得関数
	//! @details
	//! @param void なし
	//! @retval SceneManager* シーンマネージャ
	//----------------------------------------
	SceneManager* getpSceneManager();

	//----------------------------------------
	//! @brief シーンマネージャ設定関数
	//! @details
	//! @param *value シーンマネージャ
	//! @retval void なし
	//----------------------------------------
	void setSceneManager(SceneManager* value);

	//----------------------------------------
	//! @brief ステート取得関数
	//! @details
	//! @param void なし
	//! @retval StateBase* ステート
	//----------------------------------------
	StateBase* getpState();

	//----------------------------------------
	//! @brief ステート設定関数
	//! @details
	//! @param *value ステート
	//! @retval void なし
	//----------------------------------------
	void setState(StateBase* value);


//====================
// 関数
//====================
public:
	//----------------------------------------
	//! @brief コンストラクタ
	//! @details
	//! @param *state 最初のステート
	//----------------------------------------
	SceneBase(StateBase* state);

	//----------------------------------------
	//! @brief デストラクタ
	//! @details
	//! @param void なし
	//----------------------------------------
	virtual ~SceneBase() = 0;

	//----------------------------------------
	//! @brief 初期化関数
	//! @details
	//! @param void なし
	//! @retval void なし
	//----------------------------------------
	virtual void Init() = 0;

	//----------------------------------------
	//! @brief 終了関数
	//! @details
	//! @param void なし
	//! @retval void なし
	//----------------------------------------
	virtual void Uninit() = 0;

	//----------------------------------------
	//! @brief 更新関数
	//! @details
	//! @param void なし
	//! @retval void なし
	//----------------------------------------
	virtual void Update() = 0;

	//----------------------------------------
	//! @brief リセット関数
	//! @details
	//! @param void なし
	//! @retval void なし
	//----------------------------------------
	virtual void Reset() = 0;

protected:
	//----------------------------------------
	//! @brief 初期化関数
	//! @details
	//! @param void なし
	//! @retval void なし
	//----------------------------------------
	void InitState();

	//----------------------------------------
	//! @brief 終了関数
	//! @details
	//! @param void なし
	//! @retval void なし
	//----------------------------------------
	void UninitState();

	//----------------------------------------
	//! @brief 更新関数
	//! @details
	//! @param void なし
	//! @retval void なし
	//----------------------------------------
	void UpdateState();

	//----------------------------------------
	//! @brief リセット関数
	//! @details
	//! @param void なし
	//! @retval void なし
	//----------------------------------------
	void ResetState();
};



#endif