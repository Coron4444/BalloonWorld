//================================================================================
//!	@file	 PushSpaceLogo.h
//!	@brief	 プッシュスペースロゴClass
//! @details 
//!	@author  Kai Araki									@date 2018/09/02
//================================================================================
#ifndef	_PUSH_SPACE_LOGO_H_
#define _PUSH_SPACE_LOGO_H_



//****************************************
// インクルード文
//****************************************
#include <GameEngine/GameObject/GameObjectNull.h>



//************************************************************														   
//! @brief   プッシュスペースロゴClass
//!
//! @details プッシュスペースロゴのClass
//************************************************************
class PushSpaceLogo : public GameObjectNull
{
//====================
// 定数
//====================
private:
	static const int COLOR_CHANGE_SPEED;		//!< 色変更速度


//====================
// 変数
//====================
private:
	XColor4 color_ = {1.0f, 1.0f, 1.0f, 1.0f};	//!< 色
	bool is_color_change_ = false;				//!< 色変更フラグ
	int color_change_counter_;					//!< 色変更カウンタ


//====================
// プロパティ
//====================
public:
	//----------------------------------------
	//! @brief 色取得関数
	//! @details
	//! @param void なし
	//! @retval void なし
	//----------------------------------------
	XColor4* getpColor();

	//----------------------------------------
	//! @brief 色変更フラグ取得関数
	//! @details
	//! @param void なし
	//! @retval bool 色変更フラグ
	//----------------------------------------
	bool* getpIsColorChange();


//====================
// 関数
//====================
public:
	//----------------------------------------
	//! @brief 初期化関数
	//! @details
	//! @param *draw 描画基底クラス
	//! @retval void なし
	//----------------------------------------
	void Init(DrawBase* draw);

	//----------------------------------------
	//! @brief 更新関数
	//! @details
	//! @param void なし
	//! @retval void なし
	//----------------------------------------
	void Update() override;

	//----------------------------------------
	//! @brief リセット関数
	//! @details
	//! @param void なし
	//! @retval void なし
	//----------------------------------------
	void Reset() override;
};



#endif