//================================================================================
//!	@file	 TutorialLogo.h
//!	@brief	 チュートリアルロゴClass
//! @details 
//!	@author  Kai Araki									@date 2018/09/02
//================================================================================
#ifndef	_TUTORIAL_LOGO_H_
#define _TUTORIAL_LOGO_H_



//****************************************
// インクルード文
//****************************************
#include <GameEngine/GameObject/GameObjectNull.h>



//************************************************************														   
//! @brief   クリアロゴClass
//!
//! @details クリアロゴのClass
//************************************************************
class TutorialLogo : public GameObjectNull
{
//==============================
// 非静的メンバ関数
//==============================
private:
	unsigned logo_num_ = 0;		//!< チュートリアルロゴ番号


//====================
// プロパティ
//====================
public:
	//----------------------------------------
	//! @brief チュートリアルロゴ番号取得関数
	//! @details
	//! @param void なし
	//! @retval unsigned チュートリアルロゴ番号
	//----------------------------------------
	unsigned getLogoNum();
	
	//----------------------------------------
	//! @brief チュートリアルロゴ番号設定関数
	//! @details
	//! @param value チュートリアルロゴ番号
	//! @retval void なし
	//----------------------------------------
	void setLogoNum(unsigned value);


//====================
// 関数
//====================
public:
	//----------------------------------------
	//! @brief 初期化関数
	//! @details
	//! @param *draw 描画基底クラス
	//! @retval void なし
	//----------------------------------------
	void Init(DrawBase* draw);

	//----------------------------------------
	//! @brief リセット関数
	//! @details
	//! @param void なし
	//! @retval void なし
	//----------------------------------------
	void Reset() override;
};



#endif