//================================================================================
//
//    スコア更新クラス
//    Author : Araki Kai                                作成日 : 2018/06/20
//
//================================================================================



//======================================================================
//
// インクルード文
//
//======================================================================

#include "ScoreUpdate.h"
#include "../Score.h"



//======================================================================
//
// 定数定義
//
//======================================================================

const Vec2    ScoreUpdate::SCORE_POSITION(-100.0f, 300.0f);
const Vec2    ScoreUpdate::SCORE_SCALE(80.0f, 50.0f);
const XColor4 ScoreUpdate::SCORE_COLOR(0.0f, 0.0f, 0.0f, 1.0f);



//======================================================================
//
// 非静的メンバ関数定義
//
//======================================================================

//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
//
// [ 初期化関数 ]
//
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

void ScoreUpdate::Init()
{
	Score* score = (Score*)getpGameObject();

	// スコアセット
	score->score_num_->SetNumbers(score->game_scene_->getScore(), 4, true, 
								  SCORE_POSITION, SCORE_SCALE, SCORE_COLOR);
}



//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
//
// [ 終了処理関数 ]
//
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

void ScoreUpdate::Uninit()
{
	
}



//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
//
// [ 更新関数 ]
//
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

void ScoreUpdate::Update()
{
	
}



//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
//
// [ 後更新関数 ]
//
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

void ScoreUpdate::LateUpdate()
{
	Score* score = (Score*)getpGameObject();

	// スコアセット
	score->score_num_->SetNumbers(score->game_scene_->getScore(), 4, true,
								  SCORE_POSITION, SCORE_SCALE, SCORE_COLOR);
}