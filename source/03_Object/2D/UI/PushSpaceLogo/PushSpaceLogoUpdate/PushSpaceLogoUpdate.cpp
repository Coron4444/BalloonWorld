//================================================================================
//
//    プッシュスペースロゴ更新クラス
//    Author : Araki Kai                                作成日 : 2018/09/02
//
//================================================================================



//======================================================================
//
// インクルード文
//
//======================================================================

#include "PushSpaceLogoUpdate.h"

#include <Keyboard\Keyboard.h>
#include <ConvertToFrame\MeterToFrame\MeterToFrame.h>



//======================================================================
//
// 定数定義
//
//======================================================================

const int PushSpaceLogoUpdate::CHANGE_NUM = Second_To_Frame(1.0f);



//======================================================================
//
// 非静的メンバ関数定義
//
//======================================================================

//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
//
// [ 初期化関数 ]
//
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

void PushSpaceLogoUpdate::Init()
{
	// ダウンキャスト
	push_space_logo_ = (PushSpaceLogo*)getpGameObject();

	change_count_ = 0;

	color_ = XColor4(1.0f, 1.0f, 1.0f, 1.0f);
	push_space_logo_->plane_polygon_->SetColor(color_);
}



//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
//
// [ 終了処理関数 ]
//
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

void PushSpaceLogoUpdate::Uninit()
{
	
}



//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
//
// [ 更新関数 ]
//
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

void PushSpaceLogoUpdate::Update()
{
	change_count_++;

	if (change_count_ >= CHANGE_NUM)
	{
		if (color_.a == 1.0f)
		{
			color_.a = 0.0f;
		}
		else
		{
			color_.a = 1.0f;
		}

		push_space_logo_->plane_polygon_->SetColor(color_);
		change_count_ = 0;
	}
}



//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
//
// [ 後更新関数 ]
//
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

void PushSpaceLogoUpdate::LateUpdate()
{

}



//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
//
// [ デバッグ関数 ]
//
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

void PushSpaceLogoUpdate::DebugDisplay()
{
}